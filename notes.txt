1. comamnd to create req.txt file from pip file: pip freeze > requirements.txt

2 to select the env use -> Python: Select Interpreter

3. ERD DIA
python3 manage.py graph_models -a > erd.dot
python3 manage.py graph_models -a -g -o erd.png

4. PythonAnywhere:
venv path: /home/KamleshHevo/.virtualenvs/django_dashbaord-K3m8rAJq
project dir: /home/KamleshHevo/django_dashbaord/support_dashboard

5. Git braching
#create new brach from a commit
git log
git checkout 4887a2...(commit) - on kamlesh_23
git push --force origin kamlesh_23


#create new brach from a existing brach
git branch new_branch kamlesh_23
git checkout new_branch
git push -u origin new_branch

git branch hotfix_tag_fix kamlesh_23
git checkout hotfix_tag_fix

#delete a brach
git checkout kamlesh_23(other then the brach you want to delete)
git branch -d new_branch
git push --delete origin new_branch

6. Env variables
```echo $SHELL```
``` nano ~/.bash_profile # or nano ~/.zshrc ```
This will open the file in nano editor.
Then, you need to add the **export** command to the file with the name and value of your environment variable.
``` export NEW_VAR=new_value ```

Ctrl+X, Y, Enter
``` source ~/.bash_profile # or source ~/.zshrc ```

This will execute the file and set the environment variables.
```python
import os
# Get the value of NEW_VAR
new_var = os.environ.get("NEW_VAR")
# Print the value of NEW_VAR
print("NEW_VAR =", new_var)
```


7. Django Shell - graph_models
support_dashboard % python3 manage.py shell
Python 3.10.5 (v3.10.5:f377153967, Jun  6 2022, 12:36:10) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from zendesk_ticket_update.models import TestModel
>>> TestModel.objects.all()
<QuerySet [<TestModel: Test>, <TestModel: Test2>, <TestModel: Test2>]>
>>> from django.contrib import admin
>>> print(admin.site.is_registered(TestModel))
True
>>> from django.apps import apps
>>> models = apps.get_models()
>>> models
[<class 'django.contrib.admin.models.LogEntry'>, <class 'django.contrib.auth.models.Permission'>, <class 'django.contrib.auth.models.Group'>, <class 'django.contrib.auth.models.User'>, <class 'django.contrib.contenttypes.models.ContentType'>, <class 'django.contrib.sessions.models.Session'>, <class 'zendesk_ticket_update.models.Overview'>, <class 'zendesk_ticket_update.models.ZendeskUpdateLogs'>, <class 'zendesk_ticket_update.models.TestModel'>, <class 'user_setting.models.AutomationCredentials'>, <class 'user_setting.models.UsersLogs'>, <class 'user_setting.models.TeamMember'>, <class 'user_setting.models.Group'>, <class 'auditlog.models.LogEntry'>]
>>> for model in models:
...     if admin.site.is_registered(model):
...         print(model)
...
<class 'django.contrib.auth.models.Group'>
<class 'django.contrib.auth.models.User'>
<class 'zendesk_ticket_update.models.Overview'>
<class 'zendesk_ticket_update.models.ZendeskUpdateLogs'>
<class 'zendesk_ticket_update.models.TestModel'>
<class 'user_setting.models.AutomationCredentials'>
<class 'user_setting.models.UsersLogs'>
<class 'user_setting.models.TeamMember'>
<class 'user_setting.models.Group'>
<class 'auditlog.models.LogEntry'>
>>> print(admin.site.is_registered(TestModel))
True